<UserControl x:Class="HOK.MissionControl.StylesManager.DimensionsTab.DimensionsView"
             x:Name="Control"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:wpfUtilities="clr-namespace:HOK.Core.WpfUtilities;assembly=HOK.Core"
             xmlns:Behaviors="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:utilities="clr-namespace:HOK.MissionControl.StylesManager.Utilities"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800">
    <Behaviors:Interaction.Triggers>
        <Behaviors:EventTrigger EventName="Closed">
            <Behaviors:InvokeCommandAction Command="{Binding ControlClosed}" CommandParameter="{Binding ElementName=Control}"/>
        </Behaviors:EventTrigger>
    </Behaviors:Interaction.Triggers>
    <UserControl.Resources>
        <utilities:InstanceCountToStatusConverter x:Key="InstanceCountToStatusConverter"/>
        <utilities:BooleanConverter x:Key="BooleanConverter"/>
        <Style x:Key="ContentDataGridCentering" TargetType="{x:Type DataGridCell}">
            <Setter Property="Padding" Value="10"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type DataGridCell}">
                        <Grid Background="{TemplateBinding Background}">
                            <ContentPresenter VerticalAlignment="Center"/>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="CenterGridHeaderStyle" TargetType="DataGridColumnHeader">
            <Setter Property="HorizontalContentAlignment" Value="Center"/>
        </Style>
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="40"/>
        </Grid.RowDefinitions>
        <GroupBox Header="Dimension Types to Replace" Margin="10,10,10,0">
            <Grid Background="Transparent" Margin="0,0,0,10">
                <wpfUtilities:DataGridExtension x:Name="DataGridImages"
                                                ItemsSource="{Binding Dimensions, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                                CellStyle="{StaticResource ContentDataGridCentering}"
                                                AutoGenerateColumns="False"
                                                HeadersVisibility="Column"
                                                CanUserAddRows="False" 
                                                IsReadOnly="False" 
                                                SelectionUnit="FullRow"
                                                SelectionMode="Single"
                                                VerticalAlignment="Stretch"
                                                HorizontalAlignment="Stretch"
                                                HorizontalScrollBarVisibility="Hidden"
                                                Background="White"
                                                HorizontalGridLinesBrush="LightGray"
                                                VerticalGridLinesBrush="LightGray"
                                                BorderBrush="LightGray"
                                                RowHeight="20"
                                                MaxHeight="566"
                                                Margin="10,10,10,0"
                                                Padding="0">
                    <wpfUtilities:DataGridExtension.RowStyle>
                        <Style TargetType="{x:Type DataGridRow}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsEnabled, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Value="True">
                                    <Setter Property="IsEnabled" Value="True"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IsEnabled, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Value="False">
                                    <Setter Property="IsEnabled" Value="False"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </wpfUtilities:DataGridExtension.RowStyle>
                    <wpfUtilities:DataGridExtension.Columns>
                        <DataGridTemplateColumn Header="Select" Width="45">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <CheckBox IsChecked="{Binding IsSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                              Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}, Path=DataContext.CheckDimension}"
                                              CommandParameter="{Binding Path=IsChecked, RelativeSource={RelativeSource Self}}"
                                              HorizontalAlignment="Center"/>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTextColumn Header="Name" 
                                            Binding="{Binding Name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                            Width="*" 
                                            IsReadOnly="True">
                            <DataGridTextColumn.ElementStyle>
                                <Style>
                                    <Setter Property="TextBlock.TextWrapping" Value="WrapWithOverflow"/>
                                    <Setter Property="TextBlock.TextAlignment" Value="Left"/>
                                    <Setter Property="TextBlock.Padding" Value="5,0,0,0"/>
                                </Style>
                            </DataGridTextColumn.ElementStyle>
                        </DataGridTextColumn>
                        <DataGridTextColumn Header="Type" 
                                            Binding="{Binding Type, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                            Width="150" 
                                            IsReadOnly="True">
                            <DataGridTextColumn.ElementStyle>
                                <Style>
                                    <Setter Property="TextBlock.TextAlignment" Value="Left"/>
                                    <Setter Property="TextBlock.Padding" Value="5,0,0,0"/>
                                </Style>
                            </DataGridTextColumn.ElementStyle>
                        </DataGridTextColumn>
                        <DataGridTextColumn Header="Count" 
                                            Binding="{Binding Count}" 
                                            HeaderStyle="{StaticResource CenterGridHeaderStyle}"
                                            Width="80" 
                                            IsReadOnly="True">
                            <DataGridTextColumn.CellStyle>
                                <Style TargetType="{x:Type DataGridCell}" BasedOn="{StaticResource {x:Type DataGridCell}}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Count, Converter={StaticResource InstanceCountToStatusConverter}}" Value="Red">
                                            <Setter Property="Foreground" Value="#d9534f"/>
                                            <Setter Property="FontWeight"  Value="Bold"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Count, Converter={StaticResource InstanceCountToStatusConverter}}" Value="Orange">
                                            <Setter Property="Foreground" Value="#EAAC44"/>
                                            <Setter Property="FontWeight"  Value="Bold"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </DataGridTextColumn.CellStyle>
                            <DataGridTextColumn.ElementStyle>
                                <Style>
                                    <Setter Property="TextBlock.TextWrapping" Value="Wrap"/>
                                    <Setter Property="TextBlock.TextAlignment" Value="Center"/>
                                </Style>
                            </DataGridTextColumn.ElementStyle>
                        </DataGridTextColumn>
                        <DataGridTextColumn Header="Uses PU?" 
                                            Binding="{Binding IsUsingProjectUnits, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BooleanConverter}}" 
                                            HeaderStyle="{StaticResource CenterGridHeaderStyle}"
                                            Width="80" 
                                            IsReadOnly="True">
                            <DataGridTextColumn.CellStyle>
                                <Style TargetType="{x:Type DataGridCell}" BasedOn="{StaticResource {x:Type DataGridCell}}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsArray}" Value="True">
                                            <Setter Property="Foreground" Value="#d9534f"/>
                                            <Setter Property="FontWeight"  Value="Bold"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </DataGridTextColumn.CellStyle>
                            <DataGridTextColumn.ElementStyle>
                                <Style>
                                    <Setter Property="TextBlock.TextWrapping" Value="Wrap"/>
                                    <Setter Property="TextBlock.TextAlignment" Value="Center"/>
                                </Style>
                            </DataGridTextColumn.ElementStyle>
                        </DataGridTextColumn>
                    </wpfUtilities:DataGridExtension.Columns>
                </wpfUtilities:DataGridExtension>
            </Grid>
        </GroupBox>
        <GroupBox Header="Replacement Dimension Type" Margin="10,10,10,0" Grid.Row="1">
            <Grid Background="Transparent" Margin="0,0,0,10">
                <wpfUtilities:DataGridExtension x:Name="ReplaceWithDataGrid"
                                                ItemsSource="{Binding ReplacementDimensions, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                                CellStyle="{StaticResource ContentDataGridCentering}"
                                                AutoGenerateColumns="False"
                                                HeadersVisibility="Column"
                                                CanUserAddRows="False" 
                                                IsReadOnly="False" 
                                                SelectionUnit="FullRow"
                                                SelectionMode="Single"
                                                VerticalAlignment="Stretch"
                                                HorizontalAlignment="Stretch"
                                                HorizontalScrollBarVisibility="Hidden"
                                                Background="White"
                                                HorizontalGridLinesBrush="LightGray"
                                                VerticalGridLinesBrush="LightGray"
                                                BorderBrush="LightGray"
                                                RowHeight="20"
                                                MaxHeight="566"
                                                Margin="10,10,10,0"
                                                Padding="0">
                    <wpfUtilities:DataGridExtension.RowStyle>
                        <Style TargetType="{x:Type DataGridRow}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding IsEnabled, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Value="True">
                                    <Setter Property="IsEnabled" Value="True"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding IsEnabled, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" Value="False">
                                    <Setter Property="IsEnabled" Value="False"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </wpfUtilities:DataGridExtension.RowStyle>
                    <wpfUtilities:DataGridExtension.Columns>
                        <DataGridTemplateColumn Header="Select" Width="45">
                            <DataGridTemplateColumn.CellTemplate>
                                <DataTemplate>
                                    <CheckBox IsChecked="{Binding IsSelected, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                              Command="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type UserControl}}, Path=DataContext.CheckReplacementDimension}"
                                              CommandParameter="{Binding Path=IsChecked, RelativeSource={RelativeSource Self}}"
                                              HorizontalAlignment="Center"/>
                                </DataTemplate>
                            </DataGridTemplateColumn.CellTemplate>
                        </DataGridTemplateColumn>
                        <DataGridTextColumn Header="Name" 
                                            Binding="{Binding Name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                            Width="*" 
                                            IsReadOnly="True">
                            <DataGridTextColumn.ElementStyle>
                                <Style>
                                    <Setter Property="TextBlock.TextWrapping" Value="WrapWithOverflow"/>
                                    <Setter Property="TextBlock.TextAlignment" Value="Left"/>
                                    <Setter Property="TextBlock.Padding" Value="5,0,0,0"/>
                                </Style>
                            </DataGridTextColumn.ElementStyle>
                        </DataGridTextColumn>
                        <DataGridTextColumn Header="Type" 
                                            Binding="{Binding Type, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                                            Width="150" 
                                            IsReadOnly="True">
                            <DataGridTextColumn.ElementStyle>
                                <Style>
                                    <Setter Property="TextBlock.TextAlignment" Value="Left"/>
                                    <Setter Property="TextBlock.Padding" Value="5,0,0,0"/>
                                </Style>
                            </DataGridTextColumn.ElementStyle>
                        </DataGridTextColumn>
                        <DataGridTextColumn Header="Count" 
                                            Binding="{Binding Count}" 
                                            HeaderStyle="{StaticResource CenterGridHeaderStyle}"
                                            Width="80" 
                                            IsReadOnly="True">
                            <DataGridTextColumn.CellStyle>
                                <Style TargetType="{x:Type DataGridCell}" BasedOn="{StaticResource {x:Type DataGridCell}}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Count, Converter={StaticResource InstanceCountToStatusConverter}}" Value="Red">
                                            <Setter Property="Foreground" Value="#d9534f"/>
                                            <Setter Property="FontWeight"  Value="Bold"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding Count, Converter={StaticResource InstanceCountToStatusConverter}}" Value="Orange">
                                            <Setter Property="Foreground" Value="#EAAC44"/>
                                            <Setter Property="FontWeight"  Value="Bold"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </DataGridTextColumn.CellStyle>
                            <DataGridTextColumn.ElementStyle>
                                <Style>
                                    <Setter Property="TextBlock.TextWrapping" Value="Wrap"/>
                                    <Setter Property="TextBlock.TextAlignment" Value="Center"/>
                                </Style>
                            </DataGridTextColumn.ElementStyle>
                        </DataGridTextColumn>
                        <DataGridTextColumn Header="Uses PU?" 
                                            Binding="{Binding IsUsingProjectUnits, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource BooleanConverter}}" 
                                            HeaderStyle="{StaticResource CenterGridHeaderStyle}"
                                            Width="80" 
                                            IsReadOnly="True">
                            <DataGridTextColumn.CellStyle>
                                <Style TargetType="{x:Type DataGridCell}" BasedOn="{StaticResource {x:Type DataGridCell}}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding IsArray}" Value="True">
                                            <Setter Property="Foreground" Value="#d9534f"/>
                                            <Setter Property="FontWeight"  Value="Bold"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </DataGridTextColumn.CellStyle>
                            <DataGridTextColumn.ElementStyle>
                                <Style>
                                    <Setter Property="TextBlock.TextWrapping" Value="Wrap"/>
                                    <Setter Property="TextBlock.TextAlignment" Value="Center"/>
                                </Style>
                            </DataGridTextColumn.ElementStyle>
                        </DataGridTextColumn>
                    </wpfUtilities:DataGridExtension.Columns>
                </wpfUtilities:DataGridExtension>
            </Grid>
        </GroupBox>
        <Button Content="Replace" 
                Command="{Binding Replace, Mode=OneWay}"
                Margin="0,0,12,10" 
                Grid.Row="2" 
                Height="20" 
                VerticalAlignment="Bottom" 
                HorizontalAlignment="Right" 
                Width="75"/>
        <Button Content="Close" 
                Command="{Binding Close, Mode=OneWay}"
                CommandParameter="{Binding ElementName=Control}"
                Margin="0,0,97,10" 
                Grid.Row="2" 
                Height="20" 
                VerticalAlignment="Bottom" 
                HorizontalAlignment="Right" 
                Width="75"/>
        <Button Grid.Row="2" 
                Name="CheckAllButton" 
                Command="{Binding SubmitComment, Mode=OneWay}" 
                ToolTip="Submit Feedback!"
                Margin="12,8,0,8" 
                Cursor="Hand" 
                Background="Transparent" 
                Visibility="Visible" 
                HorizontalAlignment="Left">
            <Button.Template>
                <ControlTemplate TargetType="Button">
                    <StackPanel>
                        <Image Name="image1" Source="../Resources/comments_32x32.png"  Width="24" Height="24" Visibility="Visible"/>
                        <Image Name="image2" Source="../Resources/commentsHover_32x32.png" Width="24" Height="24" Visibility="Collapsed"/>
                    </StackPanel>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="image1" Property="Visibility" Value="Collapsed" />
                            <Setter TargetName="image2" Property="Visibility" Value="Visible" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Button.Template>
        </Button>
    </Grid>
</UserControl>
