# .NET Desktop
# Build and run tests for .NET Desktop or Windows classic desktop solutions.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/windows/dot-net

trigger:
  branches:
    include:
    - master
    - release/*
  tags:
    include:
    - 0.*


strategy:
  matrix:
    2025:
      buildConfiguration: 'Release R25'
    2024:
      dependsOn: 2025
      buildConfiguration: 'Release R24'
    2023:
      dependsOn: 2024
      buildConfiguration: 'Release R23'
    2022:
      dependsOn: 2023
      buildConfiguration: 'Release R22'
    2021:
      dependsOn: 2022
      buildConfiguration: 'Release R21'
    2020:
      dependsOn: 2021
      buildConfiguration: 'Release R20'
    2019:
      dependsOn: 2020
      buildConfiguration: 'Release R19'

pool:
  vmImage: 'windows-latest'

variables:
- group: code-signing
- name: solution
  value: 'HOK.*/**/HOK.*.sln'
- name: coreSolution
  value: '**/HOK.Core.sln'
- name: MCsolution
  value: '**/HOK.MissionControl.sln'
- name: paramToolsSolution
  value: '**/HOK.ParameterTools.sln'
- name: feedbackSolution
  value: '**/HOK.Feedback.sln'
- name: buildPlatform
  value: 'x64'
- name: BUILD_ENV
  value: AzureDevOps
- name: SOURCE_DIR
  value: '$(Build.SourcesDirectory)'

steps:
- task: PowerShell@2
  inputs:
    filePath: '$(Build.SourcesDirectory)/_build/copy_resources.ps1'
    errorActionPreference: 'continue'
  env:
    BUILD_CONFIGURATION: $(buildConfiguration)


- task: DownloadSecureFile@1
  inputs:
    secureFile: '$(SettingsFileName)'

- task: CopyFiles@2
  inputs:
    SourceFolder: '$(Agent.TempDirectory)'
    Contents: '$(SettingsFileName)'
    TargetFolder: '$(Build.SourcesDirectory)/HOK.Core/HOK.Core/Resources'

- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: 'Rename-Item â€“Path "$(Build.SourcesDirectory)/HOK.Core/HOK.Core/Resources/$(SettingsFileName)" -NewName "Settings.json"'

- task: DownloadSecureFile@1
  inputs:
    secureFile: 'CISign.pfx'

- task: CopyFiles@2
  inputs:
    SourceFolder: '$(Agent.TempDirectory)'
    Contents: 'CISign.pfx'
    TargetFolder: '$(Build.SourcesDirectory)/_cert'

- task: DotNetCoreCLI@2
  inputs:
    command: 'build'
    projects: '$(coreSolution)'
    arguments: '-c "$(buildConfiguration)"'
  env:
    PFX_PASS: $(CERT_SIGNING_PASS)
    PFX_PATH: $(Build.SourcesDirectory)/_cert/CISign.pfx

- task: DotNetCoreCLI@2
  inputs:
    command: 'build'
    projects: '**/HOK.MissionControl.Core.csproj'
    arguments: '-c "$(buildConfiguration)"'
  env:
    PFX_PASS: $(CERT_SIGNING_PASS)
    PFX_PATH: $(Build.SourcesDirectory)/_cert/CISign.pfx

- task: DotNetCoreCLI@2
  inputs:
    command: 'build'
    projects: '**/HOK.MissionControl.csproj'
    arguments: '-c "$(buildConfiguration)"'
  env:
    PFX_PASS: $(CERT_SIGNING_PASS)
    PFX_PATH: $(Build.SourcesDirectory)/_cert/CISign.pfx

- task: DotNetCoreCLI@2
  inputs:
    command: 'build'
    projects: '$(feedbackSolution)'
    arguments: '-c "$(buildConfiguration)"'
  env:
    PFX_PASS: $(CERT_SIGNING_PASS)
    PFX_PATH: $(Build.SourcesDirectory)/_cert/CISign.pfx

- task: DotNetCoreCLI@2
  inputs:
    command: 'build'
    projects: '$(MCsolution)'
    arguments: '-c "$(buildConfiguration)"'
  env:
    PFX_PASS: $(CERT_SIGNING_PASS)
    PFX_PATH: $(Build.SourcesDirectory)/_cert/CISign.pfx

# - task: MSBuild@1
#   inputs:
#     solution: '$(paramToolsSolution)'
#     platform: '$(buildPlatform)'
#     configuration: '$(buildConfiguration)'
#     msbuildArguments: '-t:restore'

- task: DotNetCoreCLI@2
  inputs:
    command: 'build'
    projects: '$(solution)'
    arguments: '-c "$(buildConfiguration)"'
  env:
    PFX_PASS: $(CERT_SIGNING_PASS)
    PFX_PATH: $(Build.SourcesDirectory)/_cert/CISign.pfx

# - task: PowerShell@2
#   inputs:
#     filePath: '$(Build.SourcesDirectory)/_build/copy_artifacts.ps1'
#     errorActionPreference: 'continue'
#   env:
#     BUILD_CONFIGURATION: $(buildConfiguration)

# - task: PublishBuildArtifacts@1
#   inputs:
#     PathtoPublish: '$(Build.SourcesDirectory)/_artifacts'
#     ArtifactName: '$(Build.SourceBranchName)'
#     publishLocation: 'Container'


