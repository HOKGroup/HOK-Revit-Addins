# .NET Desktop
# Build and run tests for .NET Desktop or Windows classic desktop solutions.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/azure/devops/pipelines/apps/windows/dot-net

trigger:
  branches:
    include:
    - master
    - release/*
  tags:
    include:
    - 0.*


strategy:
  matrix:
    2022:
      buildConfiguration: '2022'
    2021:
      buildConfiguration: '2021'
    2020:
      buildConfiguration: '2020'
    2019:
      buildConfiguration: '2019'
    2018:
      buildConfiguration: '2018'

pool:
  vmImage: 'vs2017-win2016'

variables:
  solution: '**/HOK*.sln !**/HOK.ParameterTools.sln'
  coreSolution: '**/HOK.Core.sln'
  MCsolution: '**/HOK.MissionControl.sln'
  feedbackSolution: '**/HOK.Feedback.sln'
  buildPlatform: 'x64'
  BUILD_ENV: 'AzureDevOps'
  HOKDepsDirectory: '$(Build.SourcesDirectory)'

steps:
- task: PowerShell@2
  inputs:
    filePath: '$(Build.SourcesDirectory)/_build/copy_resources.ps1'
    errorActionPreference: 'continue'
  env:
    BUILD_CONFIGURATION: $(buildConfiguration)

- task: PowerShell@2
  inputs:
    filePath: '$(Build.SourcesDirectory)/_build/remove_unused_folders.ps1'
    errorActionPreference: 'continue'
  env:
    BUILD_SOURCESDIRECTORY: $(Build.SourcesDirectory)

- task: DownloadSecureFile@1
  inputs:
    secureFile: 'HOK Addins Deps01.zip'

- task: DownloadSecureFile@1
  inputs:
    secureFile: 'HOK Addins Deps02.zip'

- task: DownloadSecureFile@1
  inputs:
    secureFile: 'HOK Addins Deps03.zip'

- task: DownloadSecureFile@1
  inputs:
    secureFile: '$(SettingsFileName)'

- task: CopyFiles@2
  inputs:
    SourceFolder: '$(Agent.TempDirectory)'
    Contents: '$(SettingsFileName)'
    TargetFolder: '$(Build.SourcesDirectory)/HOK.Core/HOK.Core/Resources'

- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: 'Rename-Item â€“Path "$(Build.SourcesDirectory)/HOK.Core/HOK.Core/Resources/$(SettingsFileName)" -NewName "Settings.json"'

- task: DownloadSecureFile@1
  inputs:
    secureFile: 'CISign.pfx'

- task: CopyFiles@2
  inputs:
    SourceFolder: '$(Agent.TempDirectory)'
    Contents: 'CISign.pfx'
    TargetFolder: '$(Build.SourcesDirectory)/_cert'

- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: 'Get-ChildItem -Directory | Where-Object { $_.Name.Contains(" ") } | Rename-Item -NewName { $_.Name.Replace(" ", "_") }'

- task: PowerShell@2
  inputs:
    targetType: 'inline'
    script: 'Get-ChildItem -Path **/packages/* -Directory | ForEach-Object { Remove-Item -Recurse -LiteralPath $_.FullName }'

- task: ExtractFiles@1
  inputs:
    archiveFilePatterns: '$(Agent.TempDirectory)/*.zip'
    cleanDestinationFolder: false
    destinationFolder: '$(Build.SourcesDirectory)'

- task: NuGetCommand@2
  inputs:
    command: 'restore'
    restoreSolution: '$(solution)'
    feedsToUse: 'select'
    noCache: true

- task: VSBuild@1
  inputs:
    solution: '$(coreSolution)'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'
    maximumCpuCount: true
  env:
    PFX_PASS: $(CERT_SIGNING_PASS)
    PFX_PATH: $(Build.SourcesDirectory)/_cert/CISign.pfx

- task: MSBuild@1
  inputs:
    solution: '$(MCsolution)'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'
    msbuildArguments: '/target:HOK_MissionControl'
  env:
    PFX_PASS: $(CERT_SIGNING_PASS)
    PFX_PATH: $(Build.SourcesDirectory)/_cert/CISign.pfx

- task: MSBuild@1
  inputs:
    solution: '$(MCsolution)'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'
    msbuildArguments: '/target:HOK_MissionControl_Core'
  env:
    PFX_PASS: $(CERT_SIGNING_PASS)
    PFX_PATH: $(Build.SourcesDirectory)/_cert/CISign.pfx

- task: VSBuild@1
  inputs:
    solution: '$(feedbackSolution)'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'
    maximumCpuCount: true
  env:
    PFX_PASS: $(CERT_SIGNING_PASS)
    PFX_PATH: $(Build.SourcesDirectory)/_cert/CISign.pfx

- task: VSBuild@1
  inputs:
    solution: '$(MCsolution)'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'
    maximumCpuCount: true
  env:
    PFX_PASS: $(CERT_SIGNING_PASS)
    PFX_PATH: $(Build.SourcesDirectory)/_cert/CISign.pfx

- task: VSBuild@1
  inputs:
    solution: '$(solution)'
    platform: '$(buildPlatform)'
    configuration: '$(buildConfiguration)'
    maximumCpuCount: true
  env:
    PFX_PASS: $(CERT_SIGNING_PASS)
    PFX_PATH: $(Build.SourcesDirectory)/_cert/CISign.pfx

- task: PowerShell@2
  inputs:
    filePath: '$(Build.SourcesDirectory)/_build/copy_artifacts.ps1'
    errorActionPreference: 'continue'
  env:
    BUILD_CONFIGURATION: $(buildConfiguration)

- task: PublishBuildArtifacts@1
  inputs:
    PathtoPublish: '$(Build.SourcesDirectory)/_artifacts'
    ArtifactName: '$(Build.SourceBranchName)'
    publishLocation: 'Container'

